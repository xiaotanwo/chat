{"version":3,"sources":["webpack:///./src/App.vue?e9b2","webpack:///./src/App.vue","webpack:///src/App.vue","webpack:///./src/components/Login.vue?71b8","webpack:///./src/components/Login.vue","webpack:///src/components/Login.vue","webpack:///./src/components/Register.vue?577d","webpack:///./src/components/Register.vue","webpack:///src/components/Register.vue","webpack:///src/components/Chat.vue","webpack:///./src/components/Chat.vue?ce40","webpack:///./src/components/Chat.vue","webpack:///./src/router/index.js","webpack:///./src/main.js"],"names":["selectortype_template_index_0_src_App","render","_h","this","$createElement","_c","_self","attrs","id","_v","staticRenderFns","src_App","__webpack_require__","normalizeComponent","name","ssrContext","components_Login","_vm","gutter","span","offset","staticClass","staticStyle","opacity","color","placeholder","clearable","nativeOn","keydown","$event","type","indexOf","_k","keyCode","key","toLogin","model","value","callback","$$v","input_name","expression","show-password","input_password","loading","load","round","on","click","_s","login_tip","toRegister","src_components_Login","Login_normalizeComponent","data","slat","methods","$router","replace","_this","trim","trueName","truePassword","$http","post","password","$md5","then","res","ret","alertSuccess","path","query","username","alertError","msg","catch","length","$message","error","message","center","success","components_Register","input_password_second","register_tips","src_components_Register","Register_normalizeComponent","Chat","components","Avatar","a","created","$route","headname","init","initWebpack","updatetimer","setInterval","get","updated","ele","document","getElementById","scrollTop","scrollHeight","chatTitle","outConnecting","chatText","chatType","shiftFlag","friendList","groupList","roomList","addFriendDialogVisible","friendApplyDialogVisible","newGroupDialogVisible","joinGroupDialogVisible","friendsDialogVisible","addFriendForm","applyName","newGroupForm","joinGroupForm","formLabelWidth","friendApplyTableData","friendsTableData","info","ws","lockReconnect","timeout","timeoutObj","serverTimeoutObj","timeoutnum","logout_flag","_this2","obj","WebSocket","onopen","onmessage","onclose","onerror","alert","reconnect","that","clearTimeout","setTimeout","reset","start","self","readyState","send","close","evt","JSON","parse","fristType","parseInt","secendType","chatData","sessionStorage","getItem","toName","str","infoToHtml","fromName","tmp","setItem","showTip","console","log","push","index","splice","friend","i","logout","_this3","clear","addFriend","_this4","addFriendClose","agreeFriendApply","rows","_this5","refuseFriendApply","_this6","deleteFriend","_this7","newGroup","_this8","newGroupClose","joinGroup","_this9","joinGroupClose","getAvatar","col","substring","getMsg","dir","tip","handleCommand","command","_this10","$refs","elMenu","activeIndex","chatInRoom","item","chatInGroup","chatWithFriend","toSend","event","sendMsg","jsonData","stringify_default","downshift","components_Chat","title","visible","width","top","close-on-click-modal","show-close","update:visible","label","label-width","autocomplete","$set","slot","prop","fixed","scopedSlots","_u","fn","scope","size","$index","height","background-color","vertical-align","inline","border","_e","margin","padding","ref","text-align","border-right","default-active","text-color","active-text-color","unique-opened","_l","padding-top","font-size","icon","domProps","innerHTML","maxlength","resize","keyup","shiftKey","src_components_Chat","Chat_normalizeComponent","Vue","use","Router","router","routes","component","Login","Register","config","productionTip","ElementUI","prototype","axios","defaults","withCredentials","md5","el","App","template"],"mappings":"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","file":"static/js/app.6dc57a60065452bc23e5.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{attrs:{\"id\":\"bg\"}}),_vm._v(\" \"),_c('div',{attrs:{\"id\":\"app\"}},[_c('router-view')],1)])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-7635cb8e\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/App.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-7635cb8e\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../node_modules/vue-loader/lib/selector?type=styles&index=0!./App.vue\")\n}\nvar normalizeComponent = require(\"!../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\nimport __vue_script__ from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\n/* template */\nimport __vue_template__ from \"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-7635cb8e\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../node_modules/vue-loader/lib/selector?type=template&index=0!./App.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/App.vue\n// module id = null\n// module chunks = ","<template>\n  <div>\n    <div id=\"bg\"></div>\n    <div id=\"app\">\n      <router-view/>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n    name: 'App'\n}\n</script>\n\n<style>\n    #app {\n        font-family: 'Avenir', Helvetica, Arial, sans-serif;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n        text-align: center;\n        color: #2c3e50;\n        margin-top: 60px;\n\n        overflow-x: hidden; /* 隐藏底部滑动条 */\n    }\n    #bg {\n        background: url(\"assets/img/bg.jpg\") center center no-repeat;\n        width:100%;\n        height:100%;\n        position:fixed;\n        background-size:100% 100%;\n\n        top: 0;\n        left: 0;\n\n        filter:blur(2px); /*虚化值，越大越模糊*/\n    }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/App.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('el-row',{attrs:{\"gutter\":20}},[_c('el-col',{attrs:{\"span\":8,\"offset\":8}},[_c('div',{staticClass:\"grid-content\"})])],1),_vm._v(\" \"),_c('el-row',{attrs:{\"gutter\":20}},[_c('el-col',{attrs:{\"span\":8,\"offset\":8}},[_c('div',{staticClass:\"grid-content\",staticStyle:{\"opacity\":\"0.9\"}},[_c('el-row',{attrs:{\"gutter\":20}},[_c('el-col',{attrs:{\"span\":8,\"offset\":8}},[_c('div',{staticClass:\"grid-content\"})])],1),_vm._v(\" \"),_c('el-row',{attrs:{\"gutter\":20}},[_c('el-col',{attrs:{\"span\":20,\"offset\":2}},[_c('div',{staticClass:\"grid-content\"},[_c('h1',{staticStyle:{\"color\":\"#409EFF\"}},[_vm._v(\"\\n                                聊天室 —— 登录\\n                            \")])])])],1),_vm._v(\" \"),_c('el-row',{attrs:{\"gutter\":20}},[_c('el-col',{attrs:{\"span\":14,\"offset\":5}},[_c('div',[_c('el-input',{attrs:{\"placeholder\":\"请输入昵称\",\"clearable\":\"\"},nativeOn:{\"keydown\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }return _vm.toLogin($event)}},model:{value:(_vm.input_name),callback:function ($$v) {_vm.input_name=$$v},expression:\"input_name\"}})],1)])],1),_vm._v(\" \"),_c('el-row',{attrs:{\"gutter\":20}},[_c('el-col',{attrs:{\"span\":14,\"offset\":5}},[_c('div',[_c('el-input',{attrs:{\"placeholder\":\"请输入密码\",\"show-password\":\"\"},nativeOn:{\"keydown\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }return _vm.toLogin($event)}},model:{value:(_vm.input_password),callback:function ($$v) {_vm.input_password=$$v},expression:\"input_password\"}})],1)])],1),_vm._v(\" \"),_c('el-row',{attrs:{\"gutter\":20}},[_c('el-col',{attrs:{\"span\":16,\"offset\":4}},[_c('div',{staticClass:\"grid-content\"},[_c('el-button',{attrs:{\"type\":\"primary\",\"loading\":this.load,\"round\":\"\"},on:{\"click\":_vm.toLogin}},[_vm._v(\"\\n                              \"+_vm._s(_vm.login_tip)+\"\\n                            \")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"success\",\"round\":\"\"},on:{\"click\":_vm.toRegister}},[_vm._v(\"\\n                              注册\\n                            \")])],1)])],1),_vm._v(\" \"),_c('el-row',{attrs:{\"gutter\":20}},[_c('el-col',{attrs:{\"span\":8,\"offset\":8}},[_c('div',{staticClass:\"grid-content\"})])],1)],1)])],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-5c044f30\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Login.vue\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Login.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Login.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-5c044f30\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Login.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Login.vue\n// module id = null\n// module chunks = ","<template>\r\n    <div>\r\n        <!-- 扩展上边界 -->\r\n        <el-row :gutter=\"20\">\r\n            <el-col :span=\"8\" :offset=\"8\">\r\n                <div class=\"grid-content\">\r\n                </div>\r\n            </el-col>\r\n        </el-row>\r\n\r\n        <el-row :gutter=\"20\">\r\n            <el-col :span=\"8\" :offset=\"8\">\r\n                <div class=\"grid-content\" style=\"opacity: 0.9\">\r\n                    <!-- 扩展上边界 -->\r\n                    <el-row :gutter=\"20\">\r\n                        <el-col :span=\"8\" :offset=\"8\">\r\n                            <div class=\"grid-content\">\r\n                            </div>\r\n                        </el-col>\r\n                    </el-row>\r\n\r\n                    <el-row :gutter=\"20\">\r\n                        <el-col :span=\"20\" :offset=\"2\">\r\n                            <div class=\"grid-content\">\r\n                                <h1 style=\"color:#409EFF\">\r\n                                    聊天室 —— 登录\r\n                                </h1>\r\n                            </div>\r\n                        </el-col>\r\n                    </el-row>\r\n\r\n                    <el-row :gutter=\"20\">\r\n                        <el-col :span=\"14\" :offset=\"5\">\r\n                            <div>\r\n                                <el-input placeholder=\"请输入昵称\" v-model=\"input_name\" clearable\r\n                                @keydown.enter.native=\"toLogin\">\r\n                                </el-input>\r\n                            </div>\r\n                        </el-col>\r\n                    </el-row>\r\n\r\n                    <el-row :gutter=\"20\">\r\n                        <el-col :span=\"14\" :offset=\"5\">\r\n                            <div>\r\n                                <el-input placeholder=\"请输入密码\" v-model=\"input_password\" show-password\r\n                                @keydown.enter.native=\"toLogin\">\r\n                                </el-input>\r\n                            </div>\r\n                        </el-col>\r\n                    </el-row>\r\n\r\n                    <el-row :gutter=\"20\">\r\n                        <el-col :span=\"16\" :offset=\"4\">\r\n                            <div class=\"grid-content\">\r\n                                <el-button type=\"primary\" :loading=\"this.load\" round @click=\"toLogin\">\r\n                                  {{login_tip}}\r\n                                </el-button>\r\n                                <el-button type=\"success\" round @click=\"toRegister\">\r\n                                  注册\r\n                                </el-button>\r\n                            </div>\r\n                        </el-col>\r\n                    </el-row>\r\n\r\n                  <!-- 扩展下边界 -->\r\n                    <el-row :gutter=\"20\">\r\n                        <el-col :span=\"8\" :offset=\"8\">\r\n                            <div class=\"grid-content\">\r\n                            </div>\r\n                        </el-col>\r\n                    </el-row>\r\n                </div>\r\n            </el-col>\r\n        </el-row>\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\n\r\n    export default {\r\n          data() {\r\n              return {\r\n                  input_name: '',\r\n                  input_password: '',\r\n                  slat: '1a2b3c4d',\r\n                  load: false,\r\n                  login_tip: '登录',\r\n              }\r\n          },\r\n          methods: {\r\n              // 跳转到注册页面\r\n              toRegister() {\r\n                  this.$router.replace('/register')\r\n              },\r\n\r\n              // 登录\r\n              toLogin() {\r\n                // 去除首尾空格\r\n                this.input_name = this.input_name.trim();\r\n                this.input_password = this.input_password.trim();\r\n\r\n                // 验证\r\n                if(!this.trueName(this.input_name)) {\r\n                    this.alertError(\"昵称长度只允许2至10位!\")\r\n                    return;\r\n                }\r\n                if(!this.truePassword(this.input_password)) {\r\n                    this.alertError(\"密码长度只允许6至18位!\");\r\n                    return;\r\n                }\r\n\r\n                // 登录\r\n                this.load = true;\r\n                this.login_tip = '登录中...'\r\n                this.$http.post(\r\n                    \"http://localhost/user/login\",\r\n                    {\r\n                        name: this.input_name,\r\n                        password: this.$md5(this.slat[0] + this.slat[2] + this.input_password + this.slat[5] + this.slat[4]),\r\n                    }\r\n                ).then((res)=>{\r\n                    if (res.data.ret) {\r\n                        this.alertSuccess(\"登录成功！\")\r\n                        this.$router.replace({\r\n                            path: \"/chat\",\r\n                            query: {\r\n                                username: this.input_name\r\n                            }\r\n                        });\r\n                    } else {\r\n                        this.alertError(res.data.msg);\r\n                    }\r\n                    this.load = false;\r\n                    this.login_tip = '登录'\r\n                }).catch((res) => {\r\n                    this.alertError(\"网络出现故障，请稍后再尝试！\");\r\n                    this.load = false;\r\n                    this.login_tip = '登录'\r\n                });\r\n            },\r\n\r\n            // 判断昵称正确性\r\n            trueName(name) {\r\n                return name.length >= 2 && name.length <= 10;\r\n            },\r\n\r\n            // 判断密码正确性\r\n            truePassword(password) {\r\n                return password.length >= 6 && password.length <= 18;\r\n            },\r\n\r\n            // 输出错误提示\r\n            alertError(msg) {\r\n                this.$message.error(\r\n                    {\r\n                        message: msg,\r\n                        center: true,\r\n                    }\r\n                );\r\n            },\r\n\r\n            // 输出正确提示\r\n            alertSuccess(msg) {\r\n                this.$message.success(\r\n                    {\r\n                        message: msg,\r\n                        center: true,\r\n                    }\r\n                );\r\n            },\r\n        },\r\n    }\r\n</script>\n\n\n// WEBPACK FOOTER //\n// src/components/Login.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('el-row',{attrs:{\"gutter\":20}},[_c('el-col',{attrs:{\"span\":8,\"offset\":8}},[_c('div',{staticClass:\"grid-content\"})])],1),_vm._v(\" \"),_c('el-row',{attrs:{\"gutter\":20}},[_c('el-col',{attrs:{\"span\":8,\"offset\":8}},[_c('div',{staticClass:\"grid-content\",staticStyle:{\"opacity\":\"0.9\"}},[_c('el-row',{attrs:{\"gutter\":20}},[_c('el-col',{attrs:{\"span\":8,\"offset\":8}},[_c('div',{staticClass:\"grid-content\"})])],1),_vm._v(\" \"),_c('el-row',{attrs:{\"gutter\":20}},[_c('el-col',{attrs:{\"span\":20,\"offset\":2}},[_c('div',{staticClass:\"grid-content\"},[_c('h1',{staticStyle:{\"color\":\"#67C23A\"}},[_vm._v(\"\\n                                聊天室 —— 注册\\n                            \")])])])],1),_vm._v(\" \"),_c('el-row',{attrs:{\"gutter\":20}},[_c('el-col',{attrs:{\"span\":14,\"offset\":5}},[_c('div',[_c('el-input',{attrs:{\"placeholder\":\"请输入昵称\",\"clearable\":\"\"},nativeOn:{\"keydown\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }return _vm.toRegister($event)}},model:{value:(_vm.input_name),callback:function ($$v) {_vm.input_name=$$v},expression:\"input_name\"}})],1)])],1),_vm._v(\" \"),_c('el-row',{attrs:{\"gutter\":20}},[_c('el-col',{attrs:{\"span\":14,\"offset\":5}},[_c('div',[_c('el-input',{attrs:{\"placeholder\":\"请输入密码\",\"show-password\":\"\"},nativeOn:{\"keydown\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }return _vm.toRegister($event)}},model:{value:(_vm.input_password),callback:function ($$v) {_vm.input_password=$$v},expression:\"input_password\"}})],1)])],1),_vm._v(\" \"),_c('el-row',{attrs:{\"gutter\":20}},[_c('el-col',{attrs:{\"span\":14,\"offset\":5}},[_c('div',[_c('el-input',{attrs:{\"placeholder\":\"请再次输入密码\",\"show-password\":\"\"},nativeOn:{\"keydown\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }return _vm.toRegister($event)}},model:{value:(_vm.input_password_second),callback:function ($$v) {_vm.input_password_second=$$v},expression:\"input_password_second\"}})],1)])],1),_vm._v(\" \"),_c('el-row',{attrs:{\"gutter\":20}},[_c('el-col',{attrs:{\"span\":16,\"offset\":4}},[_c('div',{staticClass:\"grid-content\"},[_c('el-button',{attrs:{\"type\":\"primary\",\"round\":\"\"},on:{\"click\":_vm.toLogin}},[_vm._v(\"\\n                              登录\\n                            \")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"success\",\"loading\":this.load,\"round\":\"\"},on:{\"click\":_vm.toRegister}},[_vm._v(\"\\n                              \"+_vm._s(_vm.register_tips)+\"\\n                            \")])],1)])],1),_vm._v(\" \"),_c('el-row',{attrs:{\"gutter\":20}},[_c('el-col',{attrs:{\"span\":8,\"offset\":8}},[_c('div',{staticClass:\"grid-content\"})])],1)],1)])],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-1d062fba\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Register.vue\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Register.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Register.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-1d062fba\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Register.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Register.vue\n// module id = null\n// module chunks = ","<template>\r\n    <div>\r\n        <!-- 扩展上边界 -->\r\n        <el-row :gutter=\"20\">\r\n            <el-col :span=\"8\" :offset=\"8\">\r\n                <div class=\"grid-content\">\r\n                </div>\r\n            </el-col>\r\n        </el-row>\r\n\r\n        <el-row :gutter=\"20\">\r\n            <el-col :span=\"8\" :offset=\"8\">\r\n                <div class=\"grid-content\" style=\"opacity: 0.9\">\r\n                    <!-- 扩展上边界 -->\r\n                    <el-row :gutter=\"20\">\r\n                        <el-col :span=\"8\" :offset=\"8\">\r\n                            <div class=\"grid-content\">\r\n                            </div>\r\n                        </el-col>\r\n                    </el-row>\r\n\r\n                    <el-row :gutter=\"20\">\r\n                        <el-col :span=\"20\" :offset=\"2\">\r\n                            <div class=\"grid-content\">\r\n                                <h1 style=\"color:#67C23A\">\r\n                                    聊天室 —— 注册\r\n                                </h1>\r\n                            </div>\r\n                        </el-col>\r\n                    </el-row>\r\n\r\n                    <el-row :gutter=\"20\">\r\n                        <el-col :span=\"14\" :offset=\"5\">\r\n                            <div>\r\n                                <el-input placeholder=\"请输入昵称\" v-model=\"input_name\" clearable\r\n                                @keydown.enter.native=\"toRegister\">\r\n                                </el-input>\r\n                            </div>\r\n                        </el-col>\r\n                    </el-row>\r\n\r\n                    <el-row :gutter=\"20\">\r\n                        <el-col :span=\"14\" :offset=\"5\">\r\n                            <div>\r\n                                <el-input placeholder=\"请输入密码\" v-model=\"input_password\" show-password\r\n                                @keydown.enter.native=\"toRegister\">\r\n                                </el-input>\r\n                            </div>\r\n                        </el-col>\r\n                    </el-row>\r\n\r\n                    <el-row :gutter=\"20\">\r\n                        <el-col :span=\"14\" :offset=\"5\">\r\n                            <div>\r\n                                <el-input placeholder=\"请再次输入密码\" v-model=\"input_password_second\" show-password\r\n                                @keydown.enter.native=\"toRegister\">\r\n                                </el-input>\r\n                            </div>\r\n                        </el-col>\r\n                    </el-row>\r\n\r\n                    <el-row :gutter=\"20\">\r\n                        <el-col :span=\"16\" :offset=\"4\">\r\n                            <div class=\"grid-content\">\r\n                                <el-button type=\"primary\" round @click=\"toLogin\">\r\n                                  登录\r\n                                </el-button>\r\n                                <el-button type=\"success\" :loading=\"this.load\" round @click=\"toRegister\">\r\n                                  {{register_tips}}\r\n                                </el-button>\r\n                            </div>\r\n                        </el-col>\r\n                    </el-row>\r\n\r\n                  <!-- 扩展下边界 -->\r\n                    <el-row :gutter=\"20\">\r\n                        <el-col :span=\"8\" :offset=\"8\">\r\n                            <div class=\"grid-content\">\r\n                            </div>\r\n                        </el-col>\r\n                    </el-row>\r\n                </div>\r\n            </el-col>\r\n        </el-row>\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\n    export default {\r\n          data() {\r\n              return {\r\n                  input_name: '',\r\n                  input_password: '',\r\n                  input_password_second: '',\r\n                  slat: '1a2b3c4d',\r\n                  load: false,\r\n                  register_tips: '注册',\r\n              }\r\n          },\r\n          methods: {\r\n            // 跳转到登录页面\r\n            toLogin() {\r\n                this.$router.replace('/login')\r\n            },\r\n\r\n            // 注册\r\n            toRegister() {\r\n                // 去除首尾空格\r\n                this.input_name = this.input_name.trim();\r\n                this.input_password = this.input_password.trim();\r\n                this.input_password_second = this.input_password_second.trim();\r\n\r\n                // 验证\r\n                if(!this.trueName(this.input_name)) {\r\n                    this.alertError(\"昵称长度只允许2至10位!\")\r\n                    return;\r\n                }\r\n                if(this.input_password !== this.input_password_second) {\r\n                    this.alertError(\"两次输入的密码不一致！\");\r\n                    return;\r\n                }\r\n                if(!this.truePassword(this.input_password)) {\r\n                    this.alertError(\"密码长度只允许6至18位!\");\r\n                    return;\r\n                }\r\n\r\n                // 注册\r\n                this.load = true;\r\n                this.register_tips = '注册中...';\r\n                this.$http.post(\r\n                    \"http://localhost/user/register\",\r\n                    {\r\n                        name: this.input_name,\r\n                        password: this.$md5(this.slat[0] + this.slat[2] + this.input_password + this.slat[5] + this.slat[4]),\r\n                    }\r\n                ).then((res)=>{\r\n                    if (res.data.ret) {\r\n                        this.alertSuccess(\"注册成功！\");\r\n                        this.$router.replace({\r\n                            path: \"/chat\",\r\n                            query: {\r\n                                username: this.input_name\r\n                            }\r\n                        });\r\n                    } else {\r\n                        this.alertError(res.data.msg);\r\n                    }\r\n                    this.load = false;\r\n                    this.register_tips = '注册';\r\n                }).catch((res) => {\r\n                    this.alertError(\"网络出现故障，请稍后再尝试！\");\r\n                    this.load = false;\r\n                    this.register_tips = '注册';\r\n                });\r\n            },\r\n\r\n            // 判断昵称正确性\r\n            trueName(name) {\r\n                return name.length >= 2 && name.length <= 10;\r\n            },\r\n\r\n            // 判断密码正确性\r\n            truePassword(password) {\r\n                return password.length >= 6 && password.length <= 18;\r\n            },            \r\n\r\n            // 输出错误提示\r\n            alertError(msg) {\r\n                this.$message.error(\r\n                    {\r\n                        message: msg,\r\n                        center: true,\r\n                    }\r\n                );\r\n            },\r\n\r\n            // 输出正确提示\r\n            alertSuccess(msg) {\r\n                this.$message.success(\r\n                    {\r\n                        message: msg,\r\n                        center: true,\r\n                    }\r\n                );\r\n            },\r\n        },\r\n    }\r\n</script>\n\n\n// WEBPACK FOOTER //\n// src/components/Register.vue","<template>\r\n    <div>\r\n        <!-- 添加好友页面 -->\r\n        <el-dialog\r\n            title=\"添加好友\"\r\n            :visible.sync=\"addFriendDialogVisible\"\r\n            width=\"400px\"\r\n            top=\"200px\"\r\n            :close-on-click-modal=false\r\n            :show-close=false\r\n            center>\r\n            <el-form :model=\"addFriendForm\">\r\n                <el-form-item label=\"好友名称：\" :label-width=\"formLabelWidth\">\r\n                    <el-input v-model=\"addFriendForm.applyName\" autocomplete=\"off\" placeholder=\"请输入对方名称\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"申请信息：\" :label-width=\"formLabelWidth\">\r\n                    <el-input v-model=\"addFriendForm.msg\" autocomplete=\"off\" placeholder=\"请输入申请消息\"></el-input>\r\n                </el-form-item>\r\n            </el-form>\r\n            <span slot=\"footer\" class=\"dialog-footer\">\r\n                <el-button type=\"danger\" @click=\"addFriendClose\">关 闭</el-button>\r\n                <el-button type=\"primary\" @click=\"addFriend\">申 请</el-button>\r\n            </span>\r\n        </el-dialog>\r\n\r\n        <!-- 好友申请页面 -->\r\n        <el-dialog\r\n            title=\"好友申请列表\"\r\n            :visible.sync=\"friendApplyDialogVisible\"\r\n            width=\"700px\"\r\n            top=\"200px\"\r\n            center>\r\n            <el-table :data=\"friendApplyTableData\">\r\n                <el-table-column prop=\"name\" label=\"用户\" width=\"160\">\r\n                </el-table-column>\r\n                <el-table-column prop=\"msg\" label=\"申请信息\">\r\n                </el-table-column>\r\n                <el-table-column\r\n                    fixed=\"right\"\r\n                    label=\"操作\"\r\n                    width=\"146\">\r\n                    <template slot-scope=\"scope\">\r\n                        <el-button @click=\"agreeFriendApply(scope.$index, friendApplyTableData)\" type=\"success\" size=\"small\">同意</el-button>\r\n                        <el-button @click=\"refuseFriendApply(scope.$index, friendApplyTableData)\" type=\"danger\" size=\"small\">拒绝</el-button>\r\n                    </template>\r\n                </el-table-column>\r\n            </el-table>\r\n        </el-dialog>\r\n        \r\n        <!-- 好友列表 -->\r\n        <el-dialog\r\n            title=\"好友列表\"\r\n            :visible.sync=\"friendsDialogVisible\"\r\n            width=\"400px\"\r\n            top=\"200px\"\r\n            center>\r\n            <el-table :data=\"friendsTableData\">\r\n                <el-table-column prop=\"friend\" label=\"好友名称\">\r\n                </el-table-column>\r\n                <el-table-column\r\n                    fixed=\"right\"\r\n                    label=\"操作\"\r\n                    width=\"76\">\r\n                    <template slot-scope=\"scope\">\r\n                        <el-button @click=\"deleteFriend(scope.$index, friendsTableData)\" type=\"danger\" size=\"small\">删除</el-button>\r\n                    </template>\r\n                </el-table-column>\r\n            </el-table>\r\n        </el-dialog>\r\n\r\n        <!-- 新建群聊页面 -->\r\n        <el-dialog\r\n            title=\"新建群聊\"\r\n            :visible.sync=\"newGroupDialogVisible\"\r\n            width=\"400px\"\r\n            top=\"200px\"\r\n            :close-on-click-modal=false\r\n            :show-close=false\r\n            center>\r\n            <el-form :model=\"newGroupForm\">\r\n                <el-form-item label=\"群聊名称：\" :label-width=\"formLabelWidth\">\r\n                    <el-input v-model=\"newGroupForm.name\" autocomplete=\"off\" placeholder=\"请输入群聊名称\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"群聊密码：\" :label-width=\"formLabelWidth\">\r\n                    <el-input v-model=\"newGroupForm.password\"\r\n                              autocomplete=\"off\"\r\n                              placeholder=\"请输入群聊密码\"\r\n                              show-password>\r\n                    </el-input>\r\n                </el-form-item>\r\n            </el-form>\r\n            <span slot=\"footer\" class=\"dialog-footer\">\r\n                <el-button type=\"danger\" @click=\"newGroupClose\">关 闭</el-button>\r\n                <el-button type=\"primary\" @click=\"newGroup\">新 建</el-button>\r\n            </span>\r\n        </el-dialog>\r\n\r\n        <!-- 加入群聊页面 -->\r\n        <el-dialog\r\n            title=\"加入群聊\"\r\n            :visible.sync=\"joinGroupDialogVisible\"\r\n            width=\"400px\"\r\n            top=\"200px\"\r\n            :close-on-click-modal=false\r\n            :show-close=false\r\n            center>\r\n            <el-form :model=\"joinGroupForm\">\r\n                <el-form-item label=\"群聊名称：\" :label-width=\"formLabelWidth\">\r\n                    <el-input v-model=\"joinGroupForm.name\" autocomplete=\"off\" placeholder=\"请输入群聊名称\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"群聊密码：\" :label-width=\"formLabelWidth\">\r\n                    <el-input v-model=\"joinGroupForm.password\"\r\n                              autocomplete=\"off\"\r\n                              placeholder=\"请输入群聊密码\"\r\n                              show-password>\r\n                    </el-input>\r\n                </el-form-item>\r\n            </el-form>\r\n            <span slot=\"footer\" class=\"dialog-footer\">\r\n                <el-button type=\"danger\" @click=\"joinGroupClose\">关 闭</el-button>\r\n                <el-button type=\"primary\" @click=\"joinGroup\">加 入</el-button>\r\n            </span>\r\n        </el-dialog>\r\n\r\n        <!-- 扩展上边界 -->\r\n        <el-row :gutter=\"20\">\r\n            <el-col :span=\"8\" :offset=\"8\">\r\n                <div class=\"grid-content\">\r\n                </div>\r\n            </el-col>\r\n        </el-row>\r\n        \r\n        <el-row :gutter=\"20\">\r\n            <el-col :span=\"16\" :offset=\"4\">\r\n                <el-container style=\"height: 700px; background-color: #2C3E50; opacity: 0.9\">\r\n                    <el-container style=\"height: 100%; width: 260px\">\r\n                        <!-- 文字头像 -->\r\n                        <el-header>\r\n                             <Avatar\r\n                                :username=\"headname\"\r\n                                background-color=\"#606266\"\r\n                                color=\"#67C23A\"\r\n                                style=\"vertical-align: middle;\"\r\n                                :inline=\"true\">\r\n                            </Avatar>\r\n                            <!-- 离线时显示 -->\r\n                            <el-tag\r\n                                v-if=\"outConnecting\"\r\n                                type=\"danger\"\r\n                                style=\"background-color: transparent; border: 0;\">\r\n                                --离线中--\r\n                            </el-tag>\r\n                        </el-header>\r\n                        <!-- 聊天列表 -->\r\n                        <el-main style=\"margin: 5px 0; padding: 0;\">\r\n                            <el-col>\r\n                                <el-menu ref=\"elMenu\"\r\n                                    default-active=\"2\"\r\n                                    class=\"el-menu-vertical-demo\"\r\n                                    background-color=\"#545c64\"\r\n                                    text-color=\"#409EFF\"\r\n                                    active-text-color=\"#ffd04b\"\r\n                                    :unique-opened=true\r\n                                    style=\"text-align: left; border-right: 0\">\r\n                                    <el-submenu index=\"1\">\r\n                                        <template slot=\"title\">\r\n                                            <i class=\"el-icon-s-home\" style=\"color: #67C23A\"></i>\r\n                                            <span>聊天室</span>\r\n                                        </template>\r\n                                        <el-menu-item\r\n                                            :index=\"('1-' + index)\"\r\n                                            v-for=\"(item,index) in roomList\" :key=\"index\"\r\n                                            @click=\"chatInRoom(item)\">\r\n                                            {{item}}\r\n                                        </el-menu-item>\r\n                                    </el-submenu>\r\n                                    \r\n                                    <el-submenu index=\"2\">\r\n                                        <template slot=\"title\">\r\n                                            <i class=\"el-icon-star-on\" style=\"color: #67C23A\"></i>\r\n                                            <span>群聊</span>\r\n                                        </template>\r\n                                        <el-menu-item style=\"color: #67C23A\" @click=\"newGroupDialogVisible = true\">新建群聊</el-menu-item>\r\n                                        <el-menu-item style=\"color: #67C23A\" @click=\"joinGroupDialogVisible = true\">加入群聊</el-menu-item>\r\n                                        <el-menu-item \r\n                                            :index=\"('2-' + index)\"\r\n                                            v-for=\"(item,index) in groupList\" :key=\"index\"\r\n                                            @click=\"chatInGroup(item)\">\r\n                                            {{item}}\r\n                                        </el-menu-item>\r\n                                    </el-submenu>\r\n\r\n                                    <el-submenu index=\"3\">\r\n                                        <template slot=\"title\">\r\n                                            <i class=\"el-icon-user-solid\" style=\"color: #67C23A\"></i>\r\n                                            <span>好友</span>\r\n                                        </template>\r\n                                        <el-menu-item style=\"color: #67C23A\" @click=\"addFriendDialogVisible = true\">添加好友</el-menu-item>\r\n                                        <el-menu-item style=\"color: #67C23A\" @click=\"friendApplyDialogVisible = true\">好友申请</el-menu-item>\r\n                                        <el-menu-item style=\"color: #67C23A\" @click=\"friendsDialogVisible = true;\">好友列表</el-menu-item>\r\n                                        <el-menu-item \r\n                                            :index=\"('3-' + index)\"\r\n                                            v-for=\"(item,index) in friendList\" :key=\"index\"\r\n                                            @click=\"chatWithFriend(item)\">\r\n                                            {{item}}\r\n                                        </el-menu-item>\r\n                                    </el-submenu>\r\n                                </el-menu>\r\n                            </el-col>\r\n                        </el-main>\r\n                        <!-- 退出按钮 -->\r\n                        <el-footer style=\"padding-top: 10px\">\r\n                            <el-button type=\"danger\" round @click=\"logout\">退出</el-button>\r\n                        </el-footer>\r\n                    </el-container>\r\n\r\n                    <el-container style=\"width: 85%\">\r\n                        <!-- 聊天室名称 -->\r\n                        <el-header style=\"text-align: center;\">\r\n                            <el-dropdown @command=\"handleCommand\">\r\n                                <span class=\"el-dropdown-link\" style=\"color: #67C23A; font-size: 20px;\">\r\n                                    {{chatTitle}}<i class=\"el-icon-arrow-down el-icon--right\"></i>\r\n                                </span>\r\n                                <el-dropdown-menu slot=\"dropdown\">\r\n                                    <el-dropdown-item icon=\"el-icon-error\" command=\"close\" style=\"color: #67C23A\">关闭</el-dropdown-item>\r\n                                    <el-dropdown-item icon=\"el-icon-delete-solid\" command=\"delete\" style=\"color: #67C23A\">删除</el-dropdown-item>\r\n                                </el-dropdown-menu>\r\n                            </el-dropdown>\r\n                        </el-header>\r\n                        \r\n                        <!-- 聊天信息框 -->\r\n                        <el-main style=\"margin: 5px 10px;\" id=\"scrollDiv\">\r\n                            <div v-html=\"info\">\r\n                            </div>\r\n                        </el-main>\r\n\r\n                        <!-- 发送框 -->\r\n                        <el-footer style=\"height: 130px; padding: 5px 10px;\">\r\n                            <el-input\r\n                                maxlength=300\r\n                                @keyup.native=\"toSend($event)\"\r\n                                @keydown.shift.native=\"downshift\"\r\n                                resize=\"none\"\r\n                                type=\"textarea\"\r\n                                :rows=\"5\"\r\n                                placeholder=\"请输入聊天内容。 Enter 发送，Shift + Enter 换行\"\r\n                                v-model=\"chatText\">\r\n                            </el-input>\r\n                        </el-footer>\r\n                    </el-container>\r\n                </el-container>\r\n            </el-col>\r\n        </el-row>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import Avatar from 'vue-avatar'\r\n    export default {\r\n        components:{\r\n            Avatar\r\n        },\r\n\r\n        created() {\r\n            // 获取登录后的用户名\r\n            this.username = this.$route.query.username;\r\n            this.headname = this.username[0] + ' ' + this.username[1];\r\n\r\n            // 初始化数据\r\n            this.init();\r\n\r\n            // 初始化websocket\r\n            this.initWebpack();\r\n\r\n            // 每30秒进行一次请求，更新后台session存活时间\r\n            var _this = this;\r\n            this.updatetimer = setInterval(function () {\r\n                // 空请求\r\n                _this.$http.get(\r\n                    \"http://localhost/updateSession\",\r\n                ).then((res)=>{\r\n                    // console.log(\"更新成功！\");\r\n                });\r\n            }, 30000);\r\n        },\r\n\r\n        // 待完善\r\n        updated(){\r\n            // 聊天定位到底部\r\n            let ele = document.getElementById('scrollDiv');\r\n            ele.scrollTop = ele.scrollHeight;\r\n        },\r\n\r\n\r\n        data() {\r\n            return {\r\n                // 密码加密\r\n                slat: '1a2b3c4d',\r\n\r\n                // 默认聊天室的名称\r\n                chatTitle: '聊天室',\r\n\r\n                // 用户名\r\n                username: '',\r\n\r\n                // 头像文本\r\n                headname: '',\r\n\r\n                // 离线显示标志\r\n                outConnecting: true,\r\n\r\n                // 聊天信息\r\n                chatText: '',\r\n\r\n                // 聊天类型，-1：没有选中聊天对象，0：聊天室，1：群聊，2：好友\r\n                chatType: -1,\r\n\r\n                // 聊天输入框换行的shift标志\r\n                shiftFlag: false,\r\n\r\n                // 好友\r\n                friendList: [],\r\n\r\n                // 群聊列表\r\n                groupList: [],\r\n\r\n                // 聊天室，测试数据\r\n                roomList: [\r\n                    '一二三四五六七八九十',\r\n                    '北京',\r\n                    '上海',\r\n                    '广州',\r\n                    '深圳',\r\n                    '北京',\r\n                    '上海',\r\n                    '广州',\r\n                    '深圳',\r\n                    '北京',\r\n                    '上海',\r\n                    '广州',\r\n                    '深圳',\r\n                ],\r\n                \r\n                // 弹窗\r\n                addFriendDialogVisible: false,\r\n                friendApplyDialogVisible: false,\r\n                newGroupDialogVisible: false,\r\n                joinGroupDialogVisible: false,\r\n                friendsDialogVisible: false,\r\n                \r\n                // 表单数据\r\n                addFriendForm: {\r\n                    applyName: '',\r\n                    msg: '',\r\n                },\r\n                newGroupForm: {\r\n                    name: '',\r\n                    password: '',\r\n                },\r\n                joinGroupForm: {\r\n                    name: '',\r\n                    password: '',\r\n                },\r\n                formLabelWidth: '120px',\r\n\r\n                // 列表数据\r\n                friendApplyTableData: [],\r\n                friendsTableData: [],\r\n\r\n                // 显示的聊天信息\r\n                info: '',\r\n\r\n                // websocket对象\r\n                ws: null, // 建立的连接\r\n                lockReconnect: false, // 是否真正建立连接\r\n                timeout: 10*1000, // 10秒一次心跳\r\n                timeoutObj: null, // 心跳心跳倒计时\r\n                serverTimeoutObj: null, // 心跳倒计时\r\n                timeoutnum: null, // 断开 重连倒计时\r\n\r\n                logout_flag: false, // 退出标志\r\n\r\n                updatetimer: null, // 更新\r\n            }\r\n        },\r\n\r\n\r\n        methods: {\r\n            // 初始化\r\n            init() {\r\n                // 获取好友申请\r\n                this.$http.get(\r\n                    \"http://localhost/friendApply/search\",\r\n                ).then((res)=>{\r\n                    if (res.data.ret) {\r\n                        this.friendApplyTableData = res.data.obj;\r\n                    } else {\r\n                        this.alertError(res.data.msg);\r\n                    }\r\n                }).catch((res) => {\r\n                    this.alertError(\"网络出现故障，请稍后再尝试！\");\r\n                });\r\n            },\r\n\r\n            // 初始化ws\r\n            initWebpack(){\r\n                // 判断是否支持websocket\r\n                if(typeof(WebSocket) === \"undefined\"){\r\n                    alert(\"您的浏览器不支持socket！请更换浏览器！\");\r\n                    return;\r\n                }\r\n                // 创建websocket对象,全局变量\r\n                this.ws = new WebSocket(\"ws://localhost/chat\");\r\n                this.ws.onopen = this.onopen;\r\n                this.ws.onmessage = this.onmessage;\r\n                this.ws.onclose = this.onclose;\r\n                this.ws.onerror = this.onerror;\r\n            },\r\n\r\n            // 重新连接\r\n            reconnect() {\r\n                var that = this;\r\n                if(that.lockReconnect) {\r\n                    return;\r\n                };\r\n                that.lockReconnect = true;\r\n                // 没连接上会一直重连，设置延迟避免请求过多\r\n                that.timeoutnum && clearTimeout(that.timeoutnum);\r\n                that.timeoutnum = setTimeout(function () {\r\n                    // 新连接\r\n                    that.initWebpack();\r\n                    that.lockReconnect = false;\r\n                }, 5000);\r\n            },\r\n\r\n            // 重置心跳\r\n            reset(){\r\n                var that = this;\r\n                // 清除时间\r\n                clearTimeout(that.timeoutObj);\r\n                clearTimeout(that.serverTimeoutObj);\r\n                // 重启心跳\r\n                that.start();\r\n            },\r\n\r\n            // 开启心跳\r\n            start(){\r\n                var self = this;\r\n                self.timeoutObj && clearTimeout(self.timeoutObj);\r\n                self.serverTimeoutObj && clearTimeout(self.serverTimeoutObj);\r\n                self.timeoutObj = setTimeout(function(){\r\n                    // 这里发送一个心跳，后端收到后，返回一个心跳消息\r\n                    // 连接正常，可以通讯的状态 1\r\n                    if (self.ws.readyState == 1) {\r\n                        self.ws.send(\"ping\");\r\n                        // console.log(\"?\")\r\n                    } else {\r\n                        // 重连\r\n                        self.reconnect();\r\n                    }\r\n                    // 设置定时器，如果后端有数据返回，则这个定时器会销毁，\r\n                    // 否则就是超时，关闭ws\r\n                    self.serverTimeoutObj = setTimeout(function() {\r\n                        // 超时关闭\r\n                        self.ws.close();\r\n                    }, self.timeout);\r\n                }, self.timeout)\r\n            }, \r\n\r\n    　　　　 onopen() {\r\n                // 设置在线\r\n                this.outConnecting = false;\r\n                // 开启心跳\r\n                this.start();\r\n            },\r\n\r\n            onmessage(evt) {\r\n                // 收到服务器信息，心跳重置\r\n                this.reset();\r\n                // 心跳返回\r\n                if (evt.data == \"pang\") {\r\n                    // console.log(\"!\")\r\n                    return ;\r\n                }\r\n                // 获取服务端推送过来的消息，转换成JSON格式\r\n                var res = JSON.parse(evt.data);\r\n\r\n                // 取整，不然可能是小数\r\n                var fristType = parseInt(res.type / 10);\r\n                var secendType = res.type % 10;\r\n                \r\n                switch(fristType) {\r\n                    case 0:\r\n                        // 聊天室\r\n                        switch(secendType) {\r\n                            case 0:\r\n                                // 聊天列表\r\n                                this.roomList = res.obj;\r\n                                break;\r\n                            case 1:\r\n                                // 聊天消息\r\n                                var chatData = sessionStorage.getItem(0 + res.toName);\r\n                                var str = this.infoToHtml(res.fromName, res.obj);\r\n                                var tmp = '';\r\n                                if (chatData != null) {\r\n                                    tmp += chatData;\r\n                                }\r\n                                tmp += str;\r\n                                sessionStorage.setItem(0 + res.toName, tmp);\r\n                                if (this.chatType == 0 && this.chatTitle == res.toName) {\r\n                                    this.info = tmp;\r\n                                }\r\n                                break;\r\n                        }\r\n                        break;\r\n                    case 1:\r\n                        // 群聊\r\n                        switch(secendType) {\r\n                            case 0:\r\n                                // 群聊列表\r\n                                this.groupList = res.obj;\r\n                                break;\r\n                            case 1:\r\n                                // 上线通知\r\n                                var chatData = sessionStorage.getItem(1 + res.toName);\r\n                                var str = this.showTip(res.fromName + \" 上线了\");\r\n                                var tmp = '';\r\n                                if (chatData != null) {\r\n                                    tmp += chatData;\r\n                                }\r\n                                tmp += str;\r\n                                sessionStorage.setItem(1 + res.toName, tmp);\r\n                                if (this.chatType == 1 && this.chatTitle == res.toName) {\r\n                                    this.info = tmp;\r\n                                }\r\n                                break;\r\n                            case 2:\r\n                                // 聊天消息\r\n                                var chatData = sessionStorage.getItem(1 + res.toName);\r\n                                var str = this.infoToHtml(res.fromName, res.obj);\r\n                                var tmp = '';\r\n                                if (chatData != null) {\r\n                                    tmp += chatData;\r\n                                }\r\n                                tmp += str;\r\n                                sessionStorage.setItem(1 + res.toName, tmp);\r\n                                if (this.chatType == 1 && this.chatTitle == res.toName) {\r\n                                    this.info = tmp;\r\n                                }\r\n                                break;\r\n                            case 3:\r\n                                // 群友离线通知\r\n                                var chatData = sessionStorage.getItem(1 + res.toName);\r\n                                var str = this.showTip(res.fromName + \" 下线了\");\r\n                                var tmp = '';\r\n                                if (chatData != null) {\r\n                                    tmp += chatData;\r\n                                }\r\n                                tmp += str;\r\n                                sessionStorage.setItem(1 + res.toName, tmp);\r\n                                if (this.chatType == 1 && this.chatTitle == res.toName) {\r\n                                    this.info = tmp;\r\n                                }\r\n                                break;\r\n                            case 4:\r\n                                // 用户加入群聊通知\r\n                                var chatData = sessionStorage.getItem(1 + res.toName);\r\n                                var str = this.showTip(res.fromName + \" 加入了群聊\");\r\n                                var tmp = '';\r\n                                if (chatData != null) {\r\n                                    tmp += chatData;\r\n                                }\r\n                                tmp += str;\r\n                                sessionStorage.setItem(1 + res.toName, tmp);\r\n                                if (this.chatType == 1 && this.chatTitle == res.toName) {\r\n                                    this.info = tmp;\r\n                                }\r\n                                break;\r\n                            case 5:\r\n                                // 群友退群通知\r\n                                var chatData = sessionStorage.getItem(1 + res.toName);\r\n                                var str = this.showTip(res.fromName + \" 退出了群聊\");\r\n                                var tmp = '';\r\n                                if (chatData != null) {\r\n                                    tmp += chatData;\r\n                                }\r\n                                tmp += str;\r\n                                sessionStorage.setItem(1 + res.toName, tmp);\r\n                                if (this.chatType == 1 && this.chatTitle == res.toName) {\r\n                                    this.info = tmp;\r\n                                }\r\n                                console.log(\"nihhao\")\r\n                                break;\r\n                        }\r\n                        break;\r\n                    case 2:\r\n                        // 好友\r\n                        switch(secendType) {\r\n                            case 0:\r\n                                // 好友列表\r\n                                this.friendsTableData = res.obj;\r\n                                break;\r\n                            case 1:\r\n                                // 在线好友列表\r\n                                this.friendList = res.obj;\r\n                                break;\r\n                            case 2:\r\n                                // 添加在线好友（不重复添加）, 待完善\r\n                                if(this.friendList.indexOf(res.fromName) == -1){\r\n                                    this.friendList.push(res.fromName);\r\n                                }\r\n                                break;\r\n                            case 3:\r\n                                // 显示好友发来的聊天信息\r\n                                var chatData = sessionStorage.getItem(2 + res.fromName);\r\n                                var str = this.infoToHtml(res.fromName, res.obj);\r\n                                var tmp = '';\r\n                                if (chatData != null) {\r\n                                    tmp += chatData;\r\n                                }\r\n                                tmp += str;\r\n                                sessionStorage.setItem(2 + res.fromName, tmp);\r\n                                if (this.chatType == 2 && this.chatTitle == res.fromName) {\r\n                                    this.info = tmp;\r\n                                }\r\n                                break;\r\n                            case 4:\r\n                                // 发送的好友已离线提示\r\n                                var chatData = sessionStorage.getItem(2 + res.toName);\r\n                                var str = this.showTip(res.toName + \" 已下线\");\r\n                                var tmp = '';\r\n                                if (chatData != null) {\r\n                                    tmp += chatData;\r\n                                }\r\n                                tmp += str;\r\n                                sessionStorage.setItem(2 + res.toName, tmp);\r\n                                if (this.chatType == 2 && this.chatTitle == res.toName) {\r\n                                    this.info = tmp;\r\n                                }\r\n                                break;\r\n                            case 5:\r\n                                // 好友离线通知\r\n                                var index = this.friendList.indexOf(res.fromName)\r\n                                if (index >= 0) {\r\n                                    this.friendList.splice(index, 1);\r\n                                }\r\n                                break;\r\n                            case 6:\r\n                                // 好友申请通知\r\n                                this.friendApplyTableData.push({\r\n                                    name: res.fromName,\r\n                                    msg: res.obj\r\n                                });\r\n                                break;\r\n                            case 7:\r\n                                // 好友申请通过通知\r\n                                this.friendList.push(res.fromName);\r\n                                this.friendsTableData.push({\r\n                                    friend: res.fromName\r\n                                })\r\n                                break;\r\n                            case 8:\r\n                                // 好友删除通知\r\n                                var index = -1;\r\n                                for (var i=0; i<this.friendsTableData.length; ++i) {\r\n                                    if (this.friendsTableData[i].friend == res.fromName) {\r\n                                        index = i;\r\n                                        break;\r\n                                    }\r\n                                }\r\n                                if (index >= 0) {\r\n                                    this.friendsTableData.splice(index, 1);\r\n                                }\r\n                                break;\r\n                        }\r\n                        break;\r\n                }\r\n            },\r\n\r\n            onclose() {\r\n                // 设置离线标志\r\n                this.outConnecting = true;\r\n                // 将ws设置为空，因为重连和不重连都不需要原来的ws了\r\n                this.ws = null;\r\n                // 超时的关闭，需要重连\r\n                if (!this.logout_flag) {\r\n                    //重连\r\n                    this.reconnect();\r\n                }\r\n            },\r\n\r\n            onerror() {\r\n                // 设置离线标志\r\n                this.outConnecting = true;\r\n                // 将ws设置为空，因为重连和不重连都不需要原来的ws了\r\n                this.ws = null;\r\n                // 超时的错误，需要重连\r\n                if (!this.logout_flag) {\r\n                    //重连\r\n                    this.reconnect();\r\n                }\r\n            },\r\n\r\n            // 注销\r\n            logout() {\r\n                this.logout_flag = true;\r\n                // 关闭ws\r\n                if (this.ws != null) this.ws.close();\r\n                // 注销\r\n                this.$http.get(\r\n                    \"http://localhost/user/logout\"\r\n                ).then((res)=>{\r\n                    if (res.data.ret) {\r\n                        this.alertSuccess(res.data.msg);\r\n                    } else {\r\n                        this.alertError(res.data.msg);\r\n                    }\r\n                    sessionStorage.clear();\r\n                    this.updatetimer && clearTimeout(this.updatetimer);\r\n                    this.$router.replace(\"/login\");\r\n                }).catch((res) => {\r\n                    this.alertError(\"网络出现故障，请稍后再尝试！\");\r\n                });\r\n            },\r\n\r\n            // 添加好友\r\n            addFriend() {\r\n                // 去除首尾的空格\r\n                this.addFriendForm.applyName = this.addFriendForm.applyName.trim();\r\n                this.addFriendForm.msg = this.addFriendForm.msg.trim();\r\n                \r\n                // 初步验证名称的正确性\r\n                if (!this.trueName(this.addFriendForm.applyName)) {\r\n                    this.alertError(\"名称长度在2至10位!\");\r\n                    return;\r\n                }\r\n                // 限制申请信息的长度为50\r\n                if (this.addFriendForm.msg.length > 50) {\r\n                    this.alertError(\"申请信息长度不能超过50!\");\r\n                    return;\r\n                }\r\n                this.$http.post(\r\n                    \"http://localhost/friendApply/add\",\r\n                    {\r\n                        applyName: this.addFriendForm.applyName,\r\n                        msg: this.addFriendForm.msg,\r\n                    }\r\n                ).then((res)=>{\r\n                    if (res.data.ret) {\r\n                        this.alertSuccess(res.data.msg);\r\n                        this.addFriendForm.applyName = '';\r\n                        this.addFriendForm.msg = '';\r\n                    } else {\r\n                        this.alertError(res.data.msg);\r\n                    }\r\n                }).catch((res) => {\r\n                    this.alertError(\"网络出现故障，请稍后再尝试！\");\r\n                });\r\n            },\r\n\r\n            // 关闭添加好友页面\r\n            addFriendClose() {\r\n                this.addFriendDialogVisible = false;\r\n                this.addFriendForm.applyName = '';\r\n                this.addFriendForm.msg = '';\r\n            },\r\n\r\n            // 同意好友申请\r\n            agreeFriendApply(index, rows) {\r\n                this.$http.get(\r\n                    \"http://localhost/friendApply/agree/\" + rows[index].name,\r\n                ).then((res)=>{\r\n                    if (res.data.ret) {\r\n                        this.alertSuccess(\"已同意该好友的申请！\");\r\n                        // 已经是好友则无需再添加\r\n                        if ('已是好友！' != res.data.msg) {\r\n                            // 添加好友到好友列表中\r\n                            this.friendsTableData.push({\r\n                                friend: rows[index].name\r\n                            });\r\n                        }\r\n                        // 移除好友申请\r\n                        rows.splice(index, 1);\r\n                    } else {\r\n                        this.alertError(res.data.msg);\r\n                    }\r\n                }).catch((res) => {\r\n                    this.alertError(\"网络出现故障，请稍后再尝试！\");\r\n                });\r\n            },\r\n\r\n            // 拒绝好友申请\r\n            refuseFriendApply(index, rows) {\r\n                this.$http.get(\r\n                    \"http://localhost/friendApply/refuse/\" + rows[index].name,\r\n                ).then((res)=>{\r\n                    if (res.data.ret) {\r\n                        this.alertSuccess(\"已拒绝该好友的申请！\");\r\n                        rows.splice(index, 1);\r\n                    } else {\r\n                        this.alertError(res.data.msg);\r\n                    }\r\n                }).catch((res) => {\r\n                    this.alertError(\"网络出现故障，请稍后再尝试！\");\r\n                });\r\n            },\r\n\r\n            // 双向删除好友\r\n            deleteFriend(index, rows) {\r\n                this.$http.get(\r\n                    \"http://localhost/friend/delete/\" + rows[index].friend,\r\n                ).then((res)=>{\r\n                    if (res.data.ret) {\r\n                        this.alertSuccess(\"双向删除好友成功！\");\r\n                        rows.splice(index, 1);\r\n                    } else {\r\n                        this.alertError(res.data.msg);\r\n                    }\r\n                }).catch((res) => {\r\n                    this.alertError(\"网络出现故障，请稍后再尝试！\");\r\n                });\r\n            },\r\n\r\n\r\n            // 新建群聊\r\n            newGroup() {\r\n                // 去除首尾的空格\r\n                this.newGroupForm.name = this.newGroupForm.name.trim();\r\n                this.newGroupForm.password = this.newGroupForm.password.trim();\r\n\r\n                // 初步验证名称的正确性\r\n                if (!this.trueName(this.newGroupForm.name)) {\r\n                    this.alertError(\"群聊名长度在2至10位!\");\r\n                    return;\r\n                }\r\n                // 限制申请信息的长度为50\r\n                if (!this.truePassword(this.newGroupForm.password)) {\r\n                    this.alertError(\"密码长度在6至18位!\");\r\n                    return;\r\n                }\r\n\r\n                this.$http.post(\r\n                    \"http://localhost/group/newGroup\",\r\n                    {\r\n                        name: this.newGroupForm.name,\r\n                        password: this.$md5(this.slat[0] + this.slat[2] + this.newGroupForm.password + this.slat[5] + this.slat[4])\r\n                    }\r\n                ).then((res)=>{\r\n                    if (res.data.ret) {\r\n                        this.alertSuccess(\"新建群聊：\" + this.newGroupForm.name + \" 成功!\");\r\n                        // 添加新建的群聊\r\n                        this.groupList.push(this.newGroupForm.name);\r\n                        // 清空新建群聊信息\r\n                        this.newGroupForm.name = '';\r\n                        this.newGroupForm.password = '';\r\n                    } else {\r\n                        this.alertError(res.data.msg);\r\n                    }\r\n                }).catch((res) => {\r\n                    this.alertError(\"网络出现故障，请稍后再尝试！\");\r\n                });\r\n            },\r\n\r\n            // 关闭新建群聊页面\r\n            newGroupClose() {\r\n                this.newGroupDialogVisible = false;\r\n                this.newGroupForm.name = '';\r\n                this.newGroupForm.password = '';\r\n            },\r\n\r\n            // 加入群聊\r\n            joinGroup() {\r\n                // 去除首尾的空格\r\n                this.joinGroupForm.name = this.joinGroupForm.name.trim();\r\n                this.joinGroupForm.password = this.joinGroupForm.password.trim();\r\n\r\n                // 初步验证名称的正确性\r\n                if (!this.trueName(this.joinGroupForm.name)) {\r\n                    this.alertError(\"群聊名长度在2至10位!\");\r\n                    return;\r\n                }\r\n                // 限制申请信息的长度为50\r\n                if (!this.truePassword(this.joinGroupForm.password)) {\r\n                    this.alertError(\"密码长度在6至18位!\");\r\n                    return;\r\n                }\r\n\r\n                this.$http.post(\r\n                    \"http://localhost/groupMember/joinGroup\",\r\n                    {\r\n                        name: this.joinGroupForm.name,\r\n                        password: this.$md5(this.slat[0] + this.slat[2] + this.joinGroupForm.password + this.slat[5] + this.slat[4])\r\n                    }\r\n                ).then((res)=>{\r\n                    if (res.data.ret) {\r\n                        this.alertSuccess(\"加入群聊：\" + this.joinGroupForm.name + \" 成功!\");\r\n                        // 添加加入的群聊\r\n                        this.groupList.push(this.joinGroupForm.name);\r\n                        // 清空新建群聊信息\r\n                        this.joinGroupForm.name = '';\r\n                        this.joinGroupForm.password = '';\r\n                    } else {\r\n                        this.alertError(res.data.msg);\r\n                    }\r\n                }).catch((res) => {\r\n                    this.alertError(\"网络出现故障，请稍后再尝试！\");\r\n                });\r\n            },\r\n\r\n            // 关闭加入群聊页面\r\n            joinGroupClose() {\r\n                this.joinGroupDialogVisible = false;\r\n                this.joinGroupForm.name = '';\r\n                this.joinGroupForm.password = '';\r\n            },\r\n\r\n            // 头像的html\r\n            getAvatar(name, col) {\r\n                return '<div style=\"margin: 0 0 10px 0\"><div aria-hidden=\"true\" class=\"vue-avatar--wrapper\" style=\"display: inline-flex; width: 50px; height: 50px; border-radius: 50%; font: 20px / 50px Helvetica, Arial, sans-serif; align-items: center; justify-content: center; text-align: center; user-select: none; background-color: rgb(96, 98, 102); color: ' + col + '; vertical-align: middle;\"><span>' + name.substring(0,2) + '</span></div></div>'\r\n            },\r\n\r\n            // msg的html\r\n            getMsg(msg, dir, col) {\r\n                return  \"<div style='color: \" + col + \"; text-align: \" + dir + \"; padding: 3px; margin: 3px'>\" +\r\n                            msg +\r\n                        \"</div>\"\r\n            },\r\n\r\n            // 聊天信息转成html进行插入\r\n            infoToHtml(name, msg) {\r\n                // 自己发送的，右边\r\n                if (name == this.username) {\r\n                    return \"<div style='margin: 2px 5px 2px 52px; display: flex; justify-content: flex-end; align-items: flex-start;'>\" +\r\n                                this.getMsg(msg, \"right\", \"#67C23A\") + this.getAvatar(name, \"#67C23A\") +\r\n                            \"</div>\"\r\n                } else { // 别人发送的，左边\r\n                    return \"<div style='margin: 2px 52px 2px 5px ; display: flex; justify-content: flex-start; align-items: flex-start;'>\" +\r\n                                this.getAvatar(name, \"#E6A23C\") + this.getMsg(msg, \"left\", \"#E6A23C\") +\r\n                            \"</div>\"\r\n                }\r\n            },\r\n\r\n            // 聊天通知的显示\r\n            showTip(tip) {\r\n                return '<div><span style=\"color: #F56C6C\">' + tip + '</span></div>';\r\n            },\r\n\r\n            // 聊天框内的操作\r\n            handleCommand(command) {\r\n                if (command == 'close') {\r\n                    this.$refs.elMenu.activeIndex = null;\r\n                    this.chatTitle = '聊天室';\r\n                    this.chatType = -1;\r\n                    this.info = '';\r\n                } else if (command == 'delete') {\r\n                    if (this.chatType == 1) {\r\n                        // 群聊删除\r\n                        this.$http.get(\r\n                            \"http://localhost/groupMember/delete/\" + this.chatTitle,\r\n                        ).then((res)=>{\r\n                            if (res.data.ret) {\r\n                                var index = this.groupList.indexOf(this.chatTitle)\r\n                                if (index >= 0) {\r\n                                    this.groupList.splice(index, 1);\r\n                                }\r\n                                this.alertSuccess(\"群聊删除成功！\");\r\n                                this.$refs.elMenu.activeIndex = null;\r\n                                this.chatTitle = '聊天室';\r\n                                this.chatType = -1;\r\n                                this.info = '';\r\n                            } else {\r\n                                this.alertError(res.data.msg);\r\n                            }\r\n                        }).catch((res) => {\r\n                            this.alertError(\"网络出现故障，请稍后再尝试！\");\r\n                        });\r\n                    } else if (this.chatType == 2) {\r\n                        // 好友删除\r\n                        this.$http.get(\r\n                            \"http://localhost/friend/delete/\" + this.chatTitle,\r\n                        ).then((res)=>{\r\n                            if (res.data.ret) {\r\n                                var index = this.friendList.indexOf(this.chatTitle)\r\n                                if (index >= 0) {\r\n                                    this.friendList.splice(index, 1);\r\n                                }\r\n                                index = -1;\r\n                                for (var i=0; i<this.friendsTableData.length; ++i) {\r\n                                    if (this.friendsTableData[i].friend == this.chatTitle) {\r\n                                        index = i;\r\n                                        break;\r\n                                    }\r\n                                }\r\n                                if (index >= 0) {\r\n                                    this.friendsTableData.splice(index, 1);\r\n                                }\r\n                                this.alertSuccess(\"好友删除成功！\");\r\n                                this.$refs.elMenu.activeIndex = null;\r\n                                this.chatTitle = '聊天室';\r\n                                this.chatType = -1;\r\n                                this.info = '';\r\n                            } else {\r\n                                this.alertError(res.data.msg);\r\n                            }\r\n                        }).catch((res) => {\r\n                            this.alertError(\"网络出现故障，请稍后再尝试！\");\r\n                        });\r\n                    } else {\r\n                        this.alertError(\"不能对此页面进行删除！\");\r\n                    }\r\n                }\r\n            },\r\n\r\n            // 聊天室点击事件\r\n            chatInRoom(item) {\r\n                this.chatTitle = item;\r\n                this.chatType = 0;\r\n                this.info = sessionStorage.getItem(this.chatType + this.chatTitle);\r\n                if (this.info == null) this.info = '';\r\n            },\r\n\r\n            // 群聊点击事件\r\n            chatInGroup(item) {\r\n                this.chatTitle = item;\r\n                this.chatType = 1;\r\n                this.info = sessionStorage.getItem(this.chatType + this.chatTitle);\r\n                if (this.info == null) this.info = '';\r\n            },\r\n\r\n            // 好友点击事件\r\n            chatWithFriend(item) {\r\n                this.chatTitle = item;\r\n                this.chatType = 2;\r\n                this.info = sessionStorage.getItem(this.chatType + this.chatTitle);\r\n                if (this.info == null) this.info = '';\r\n            },\r\n\r\n            // 发送聊天信息\r\n            toSend(event) {\r\n                // 监听回车事件\r\n                if (!this.shiftFlag && event.keyCode == 13) {\r\n                    if (this.chatType == -1) {\r\n                        this.alertError(\"请选择聊天对象！\");\r\n                        return;\r\n                    }\r\n                    if (this.outConnecting) {\r\n                        // 离线状态，即ws已经断开，无法发送\r\n                        this.alertError(\"您已断开连接，请检查网络或重新登录！\");\r\n                        return;\r\n                    }\r\n                    // 去掉首尾的空格\r\n                    this.chatText = this.chatText.trim();\r\n                    if (this.chatText == '') {\r\n                        this.alertError(\"聊天信息不嫩为空！\");\r\n                        return;\r\n                    }\r\n                    var sendMsg = this.chatText.replace(/(\\r\\n)|(\\n)/g,'<br>');\r\n                    var str = this.infoToHtml(this.username, sendMsg);\r\n                    // 本地聊天信息添加和保存\r\n                    this.info += str;\r\n                    sessionStorage.setItem(this.chatType + this.chatTitle, this.info);\r\n                    // 清空\r\n                    this.chatText = '';\r\n                    // 发送聊天信息\r\n                    var jsonData = {\"type\": this.chatType, \"toName\": this.chatTitle, \"obj\": sendMsg};\r\n                    this.ws.send(JSON.stringify(jsonData));\r\n\r\n                } else if (event.keyCode == 16) {\r\n                    this.shiftFlag = false;\r\n                }\r\n            },\r\n\r\n            // 设置shift标志\r\n            downshift() {\r\n                this.shiftFlag = true;\r\n            },\r\n\r\n            // 判断昵称正确性\r\n            trueName(name) {\r\n                return name.length >= 2 && name.length <= 10;\r\n            },\r\n\r\n            // 判断密码正确性\r\n            truePassword(password) {\r\n                return password.length >= 6 && password.length <= 18;\r\n            },\r\n\r\n            // 输出错误提示\r\n            alertError(msg) {\r\n                this.$message.error(\r\n                    {\r\n                        message: msg,\r\n                        center: true,\r\n                    }\r\n                );\r\n            },\r\n\r\n            // 输出正确提示\r\n            alertSuccess(msg) {\r\n                this.$message.success(\r\n                    {\r\n                        message: msg,\r\n                        center: true,\r\n                    }\r\n                );\r\n            },\r\n        },\r\n    };\r\n</script>\n\n\n// WEBPACK FOOTER //\n// src/components/Chat.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('el-dialog',{attrs:{\"title\":\"添加好友\",\"visible\":_vm.addFriendDialogVisible,\"width\":\"400px\",\"top\":\"200px\",\"close-on-click-modal\":false,\"show-close\":false,\"center\":\"\"},on:{\"update:visible\":function($event){_vm.addFriendDialogVisible=$event}}},[_c('el-form',{attrs:{\"model\":_vm.addFriendForm}},[_c('el-form-item',{attrs:{\"label\":\"好友名称：\",\"label-width\":_vm.formLabelWidth}},[_c('el-input',{attrs:{\"autocomplete\":\"off\",\"placeholder\":\"请输入对方名称\"},model:{value:(_vm.addFriendForm.applyName),callback:function ($$v) {_vm.$set(_vm.addFriendForm, \"applyName\", $$v)},expression:\"addFriendForm.applyName\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"申请信息：\",\"label-width\":_vm.formLabelWidth}},[_c('el-input',{attrs:{\"autocomplete\":\"off\",\"placeholder\":\"请输入申请消息\"},model:{value:(_vm.addFriendForm.msg),callback:function ($$v) {_vm.$set(_vm.addFriendForm, \"msg\", $$v)},expression:\"addFriendForm.msg\"}})],1)],1),_vm._v(\" \"),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{attrs:{\"type\":\"danger\"},on:{\"click\":_vm.addFriendClose}},[_vm._v(\"关 闭\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.addFriend}},[_vm._v(\"申 请\")])],1)],1),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":\"好友申请列表\",\"visible\":_vm.friendApplyDialogVisible,\"width\":\"700px\",\"top\":\"200px\",\"center\":\"\"},on:{\"update:visible\":function($event){_vm.friendApplyDialogVisible=$event}}},[_c('el-table',{attrs:{\"data\":_vm.friendApplyTableData}},[_c('el-table-column',{attrs:{\"prop\":\"name\",\"label\":\"用户\",\"width\":\"160\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"msg\",\"label\":\"申请信息\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"fixed\":\"right\",\"label\":\"操作\",\"width\":\"146\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"type\":\"success\",\"size\":\"small\"},on:{\"click\":function($event){return _vm.agreeFriendApply(scope.$index, _vm.friendApplyTableData)}}},[_vm._v(\"同意\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"danger\",\"size\":\"small\"},on:{\"click\":function($event){return _vm.refuseFriendApply(scope.$index, _vm.friendApplyTableData)}}},[_vm._v(\"拒绝\")])]}}])})],1)],1),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":\"好友列表\",\"visible\":_vm.friendsDialogVisible,\"width\":\"400px\",\"top\":\"200px\",\"center\":\"\"},on:{\"update:visible\":function($event){_vm.friendsDialogVisible=$event}}},[_c('el-table',{attrs:{\"data\":_vm.friendsTableData}},[_c('el-table-column',{attrs:{\"prop\":\"friend\",\"label\":\"好友名称\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"fixed\":\"right\",\"label\":\"操作\",\"width\":\"76\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"type\":\"danger\",\"size\":\"small\"},on:{\"click\":function($event){return _vm.deleteFriend(scope.$index, _vm.friendsTableData)}}},[_vm._v(\"删除\")])]}}])})],1)],1),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":\"新建群聊\",\"visible\":_vm.newGroupDialogVisible,\"width\":\"400px\",\"top\":\"200px\",\"close-on-click-modal\":false,\"show-close\":false,\"center\":\"\"},on:{\"update:visible\":function($event){_vm.newGroupDialogVisible=$event}}},[_c('el-form',{attrs:{\"model\":_vm.newGroupForm}},[_c('el-form-item',{attrs:{\"label\":\"群聊名称：\",\"label-width\":_vm.formLabelWidth}},[_c('el-input',{attrs:{\"autocomplete\":\"off\",\"placeholder\":\"请输入群聊名称\"},model:{value:(_vm.newGroupForm.name),callback:function ($$v) {_vm.$set(_vm.newGroupForm, \"name\", $$v)},expression:\"newGroupForm.name\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"群聊密码：\",\"label-width\":_vm.formLabelWidth}},[_c('el-input',{attrs:{\"autocomplete\":\"off\",\"placeholder\":\"请输入群聊密码\",\"show-password\":\"\"},model:{value:(_vm.newGroupForm.password),callback:function ($$v) {_vm.$set(_vm.newGroupForm, \"password\", $$v)},expression:\"newGroupForm.password\"}})],1)],1),_vm._v(\" \"),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{attrs:{\"type\":\"danger\"},on:{\"click\":_vm.newGroupClose}},[_vm._v(\"关 闭\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.newGroup}},[_vm._v(\"新 建\")])],1)],1),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":\"加入群聊\",\"visible\":_vm.joinGroupDialogVisible,\"width\":\"400px\",\"top\":\"200px\",\"close-on-click-modal\":false,\"show-close\":false,\"center\":\"\"},on:{\"update:visible\":function($event){_vm.joinGroupDialogVisible=$event}}},[_c('el-form',{attrs:{\"model\":_vm.joinGroupForm}},[_c('el-form-item',{attrs:{\"label\":\"群聊名称：\",\"label-width\":_vm.formLabelWidth}},[_c('el-input',{attrs:{\"autocomplete\":\"off\",\"placeholder\":\"请输入群聊名称\"},model:{value:(_vm.joinGroupForm.name),callback:function ($$v) {_vm.$set(_vm.joinGroupForm, \"name\", $$v)},expression:\"joinGroupForm.name\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"群聊密码：\",\"label-width\":_vm.formLabelWidth}},[_c('el-input',{attrs:{\"autocomplete\":\"off\",\"placeholder\":\"请输入群聊密码\",\"show-password\":\"\"},model:{value:(_vm.joinGroupForm.password),callback:function ($$v) {_vm.$set(_vm.joinGroupForm, \"password\", $$v)},expression:\"joinGroupForm.password\"}})],1)],1),_vm._v(\" \"),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{attrs:{\"type\":\"danger\"},on:{\"click\":_vm.joinGroupClose}},[_vm._v(\"关 闭\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.joinGroup}},[_vm._v(\"加 入\")])],1)],1),_vm._v(\" \"),_c('el-row',{attrs:{\"gutter\":20}},[_c('el-col',{attrs:{\"span\":8,\"offset\":8}},[_c('div',{staticClass:\"grid-content\"})])],1),_vm._v(\" \"),_c('el-row',{attrs:{\"gutter\":20}},[_c('el-col',{attrs:{\"span\":16,\"offset\":4}},[_c('el-container',{staticStyle:{\"height\":\"700px\",\"background-color\":\"#2C3E50\",\"opacity\":\"0.9\"}},[_c('el-container',{staticStyle:{\"height\":\"100%\",\"width\":\"260px\"}},[_c('el-header',[_c('Avatar',{staticStyle:{\"vertical-align\":\"middle\"},attrs:{\"username\":_vm.headname,\"background-color\":\"#606266\",\"color\":\"#67C23A\",\"inline\":true}}),_vm._v(\" \"),(_vm.outConnecting)?_c('el-tag',{staticStyle:{\"background-color\":\"transparent\",\"border\":\"0\"},attrs:{\"type\":\"danger\"}},[_vm._v(\"\\n                            --离线中--\\n                        \")]):_vm._e()],1),_vm._v(\" \"),_c('el-main',{staticStyle:{\"margin\":\"5px 0\",\"padding\":\"0\"}},[_c('el-col',[_c('el-menu',{ref:\"elMenu\",staticClass:\"el-menu-vertical-demo\",staticStyle:{\"text-align\":\"left\",\"border-right\":\"0\"},attrs:{\"default-active\":\"2\",\"background-color\":\"#545c64\",\"text-color\":\"#409EFF\",\"active-text-color\":\"#ffd04b\",\"unique-opened\":true}},[_c('el-submenu',{attrs:{\"index\":\"1\"}},[_c('template',{slot:\"title\"},[_c('i',{staticClass:\"el-icon-s-home\",staticStyle:{\"color\":\"#67C23A\"}}),_vm._v(\" \"),_c('span',[_vm._v(\"聊天室\")])]),_vm._v(\" \"),_vm._l((_vm.roomList),function(item,index){return _c('el-menu-item',{key:index,attrs:{\"index\":('1-' + index)},on:{\"click\":function($event){return _vm.chatInRoom(item)}}},[_vm._v(\"\\n                                        \"+_vm._s(item)+\"\\n                                    \")])})],2),_vm._v(\" \"),_c('el-submenu',{attrs:{\"index\":\"2\"}},[_c('template',{slot:\"title\"},[_c('i',{staticClass:\"el-icon-star-on\",staticStyle:{\"color\":\"#67C23A\"}}),_vm._v(\" \"),_c('span',[_vm._v(\"群聊\")])]),_vm._v(\" \"),_c('el-menu-item',{staticStyle:{\"color\":\"#67C23A\"},on:{\"click\":function($event){_vm.newGroupDialogVisible = true}}},[_vm._v(\"新建群聊\")]),_vm._v(\" \"),_c('el-menu-item',{staticStyle:{\"color\":\"#67C23A\"},on:{\"click\":function($event){_vm.joinGroupDialogVisible = true}}},[_vm._v(\"加入群聊\")]),_vm._v(\" \"),_vm._l((_vm.groupList),function(item,index){return _c('el-menu-item',{key:index,attrs:{\"index\":('2-' + index)},on:{\"click\":function($event){return _vm.chatInGroup(item)}}},[_vm._v(\"\\n                                        \"+_vm._s(item)+\"\\n                                    \")])})],2),_vm._v(\" \"),_c('el-submenu',{attrs:{\"index\":\"3\"}},[_c('template',{slot:\"title\"},[_c('i',{staticClass:\"el-icon-user-solid\",staticStyle:{\"color\":\"#67C23A\"}}),_vm._v(\" \"),_c('span',[_vm._v(\"好友\")])]),_vm._v(\" \"),_c('el-menu-item',{staticStyle:{\"color\":\"#67C23A\"},on:{\"click\":function($event){_vm.addFriendDialogVisible = true}}},[_vm._v(\"添加好友\")]),_vm._v(\" \"),_c('el-menu-item',{staticStyle:{\"color\":\"#67C23A\"},on:{\"click\":function($event){_vm.friendApplyDialogVisible = true}}},[_vm._v(\"好友申请\")]),_vm._v(\" \"),_c('el-menu-item',{staticStyle:{\"color\":\"#67C23A\"},on:{\"click\":function($event){_vm.friendsDialogVisible = true;}}},[_vm._v(\"好友列表\")]),_vm._v(\" \"),_vm._l((_vm.friendList),function(item,index){return _c('el-menu-item',{key:index,attrs:{\"index\":('3-' + index)},on:{\"click\":function($event){return _vm.chatWithFriend(item)}}},[_vm._v(\"\\n                                        \"+_vm._s(item)+\"\\n                                    \")])})],2)],1)],1)],1),_vm._v(\" \"),_c('el-footer',{staticStyle:{\"padding-top\":\"10px\"}},[_c('el-button',{attrs:{\"type\":\"danger\",\"round\":\"\"},on:{\"click\":_vm.logout}},[_vm._v(\"退出\")])],1)],1),_vm._v(\" \"),_c('el-container',{staticStyle:{\"width\":\"85%\"}},[_c('el-header',{staticStyle:{\"text-align\":\"center\"}},[_c('el-dropdown',{on:{\"command\":_vm.handleCommand}},[_c('span',{staticClass:\"el-dropdown-link\",staticStyle:{\"color\":\"#67C23A\",\"font-size\":\"20px\"}},[_vm._v(\"\\n                                \"+_vm._s(_vm.chatTitle)),_c('i',{staticClass:\"el-icon-arrow-down el-icon--right\"})]),_vm._v(\" \"),_c('el-dropdown-menu',{attrs:{\"slot\":\"dropdown\"},slot:\"dropdown\"},[_c('el-dropdown-item',{staticStyle:{\"color\":\"#67C23A\"},attrs:{\"icon\":\"el-icon-error\",\"command\":\"close\"}},[_vm._v(\"关闭\")]),_vm._v(\" \"),_c('el-dropdown-item',{staticStyle:{\"color\":\"#67C23A\"},attrs:{\"icon\":\"el-icon-delete-solid\",\"command\":\"delete\"}},[_vm._v(\"删除\")])],1)],1)],1),_vm._v(\" \"),_c('el-main',{staticStyle:{\"margin\":\"5px 10px\"},attrs:{\"id\":\"scrollDiv\"}},[_c('div',{domProps:{\"innerHTML\":_vm._s(_vm.info)}})]),_vm._v(\" \"),_c('el-footer',{staticStyle:{\"height\":\"130px\",\"padding\":\"5px 10px\"}},[_c('el-input',{attrs:{\"maxlength\":\"300\",\"resize\":\"none\",\"type\":\"textarea\",\"rows\":5,\"placeholder\":\"请输入聊天内容。 Enter 发送，Shift + Enter 换行\"},nativeOn:{\"keyup\":function($event){return _vm.toSend($event)},\"keydown\":function($event){if(!$event.shiftKey){ return null; }return _vm.downshift($event)}},model:{value:(_vm.chatText),callback:function ($$v) {_vm.chatText=$$v},expression:\"chatText\"}})],1)],1)],1)],1)],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-7645486c\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Chat.vue\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Chat.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Chat.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-7645486c\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Chat.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Chat.vue\n// module id = null\n// module chunks = ","import Vue from 'vue'\nimport Router from 'vue-router'\nimport Login from '@/components/Login'\nimport Register from '@/components/Register'\nimport Chat from '@/components/Chat'\n\nVue.use(Router)\n\nexport default new Router({\n  routes: [\n    {\n      path: '/',\n      component: Login\n    },\n    {\n      path: '/login',\n      component: Login\n    },\n    {\n      path: '/register',\n      component: Register\n    },\n    {\n      path: '/chat',\n      component: Chat\n    }\n  ]\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/router/index.js","// The Vue build version to load with the `import` command\n// (runtime-only or standalone) has been set in webpack.base.conf with an alias.\nimport Vue from 'vue'\nimport App from './App'\nimport router from './router'\n\nVue.config.productionTip = false\n\n// 引入elementUI\nimport ElementUI from 'element-ui';\nimport 'element-ui/lib/theme-chalk/index.css';\nVue.use(ElementUI);\n\n// 引入axios\nimport axios from 'axios'\nVue.prototype.$http=axios;\naxios.defaults.withCredentials = true;  //允许axios请求携带cookie等凭证\n\n// 引入md5\nimport md5 from 'js-md5'\nVue.prototype.$md5 = md5\n\n// 引入公共css\nimport './assets/css/global.css'\n\n/* eslint-disable no-new */\nnew Vue({\n  el: '#app',\n  router,\n  components: { App },\n  template: '<App/>'\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js"],"sourceRoot":""}